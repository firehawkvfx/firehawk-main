---
# tasks file for ansible/roles/softnas-s3-disk-create
- debug:
    msg: "create new s3 disk"

- name: check pool_name is defined
  fail:
    msg: "Bailing out: creating a disk requires a 'pool_name'"
  when: pool_name is not defined

- name: check volume_name is defined
  fail:
    msg: "Bailing out: creating a disk requires a 'volume_name'"
  when: volume_name is not defined

- set_fact:
    encrypt_option: ""
    encrypt_label: "nonencrypted"

- name: check s3 encrypt
  debug:
    msg: "s3_disk_password: {{ s3_disk_password }} \nencrypt_s3: {{ encrypt_s3 }}"

- name: check if s3_disk_password is defined and encrypt is true
  set_fact:
    encrypt_option: "encrypted={{ s3_disk_password }}"
    encrypt_label: "encrypted"
  when: (s3_disk_password is defined) and (encrypt_s3 == true)

- set_fact:
    s3_disk_bucket_name: "{{ public_domain | replace('.','') }}-{{ nas_name }}-{{ pool_name }}-{{ volume_name }}-{{ disk_device }}-{{ s3_disk_size_max_value }}{{ s3_disk_size_max_units | lower}}-{{ encrypt_label }}"

- name: Bucket name
  debug:
    msg: "Will create bucket name: {{s3_disk_bucket_name}}"

- name: softnas login
  shell: |
    softnas-cmd login softnas {{ user_softnas_pw }}
  no_log: true

- name: create s3 extender disk
  shell: |
    softnas-cmd login softnas {{ user_softnas_pw }}
    # set -x
    softnas-cmd diskmgmt createExtenderDisk type=amazon accessKey={{ AWS_ACCESS_KEY }} secretKey={{ AWS_SECRET_KEY }} bucketName={{ s3_disk_bucket_name }} sizeMaxValue={{ s3_disk_size_max_value }} sizeMaxUnits={{ s3_disk_size_max_units }} region={{ s3_disk_region }} {{ encrypt_option }}> /tmp/softnas_init_s3_disk_output_dict.json
  no_log: true

- fetch:
    src: /tmp/softnas_init_s3_disk_output_dict.json
    dest: /tmp/
    flat: true

- include_vars:
    file: /tmp/softnas_init_s3_disk_output_dict.json
    name: softnas_init_s3_disk_output_dict

- name: s3 extender disk all json output
  debug:
    msg: "{{ softnas_init_s3_disk_output_dict }}"

- name: check if softnas cli login succeeded
  debug:
    msg: "softnas-cli login succeeded"
  when: softnas_init_s3_disk_output_dict.success

- name: check if softnas cli login failed
  fail:
    msg: "{{softnas_init_s3_disk_output_dict}}"
  failed_when: softnas_init_s3_disk_output_dict.success == false

- name: check if disk create failed
  fail:
    msg: "{{softnas_init_s3_disk_output_dict.result.msg}}"
  failed_when: softnas_init_s3_disk_output_dict.result.success == false

- set_fact:
    new_s3_disk_name: "{{ softnas_init_s3_disk_output_dict.result.records.disk_info.disk_name }}"
  
- name: new disk name
  debug:
    msg: "{{ new_s3_disk_name }}"

- name: create pool
  shell: |
    softnas-cmd login softnas {{ user_softnas_pw }}
    softnas-cmd createpool {{ new_s3_disk_name }} -n={{ pool_name }} -r=0 -f=on -sync=standard -cs=off -shared={{ share_pool }} -t > /tmp/softnas_init_pool_output_dict.json
  no_log: true

- fetch:
    src: /tmp/softnas_init_pool_output_dict.json
    dest: /tmp/
    flat: true

- include_vars:
    file: /tmp/softnas_init_pool_output_dict.json
    name: softnas_init_pool_output_dict

- name: create pool all json output
  debug:
    msg: "{{ softnas_init_pool_output_dict }}"

- name: check if softnas cli login succeeded
  debug:
    msg: "softnas-cli login succeeded"
  when: softnas_init_pool_output_dict.success

- name: check if softnas cli login failed
  fail:
    msg: "{{softnas_init_pool_output_dict}}"
  failed_when: softnas_init_pool_output_dict.success == false

- name: check if pool create failed
  fail:
    msg: |
      "Bucket was created, but pool create failed.  If you are trying to create a new device to extend an existing pool this can be taken over through the softnas storage center ui under the menu: storage pools-expand."
      {{softnas_init_pool_output_dict.result.msg}}
  failed_when: softnas_init_pool_output_dict.result.success == false

- name: create volume
  shell: |
    softnas-cmd login softnas {{ user_softnas_pw }}
    softnas-cmd createvolume vol_name={{ volume_name }} pool={{ pool_name }} vol_type=filesystem provisioning=thin exportNFS=on shareCIFS=on enable_snapshot=off sync=always replication=off > /tmp/softnas_init_volume_output_dict.json
  no_log: true
  
- fetch:
    src: /tmp/softnas_init_volume_output_dict.json
    dest: /tmp/
    flat: true

- include_vars:
    file: /tmp/softnas_init_volume_output_dict.json
    name: softnas_init_volume_output_dict

- name: create volume all json output
  debug:
    msg: "{{ softnas_init_volume_output_dict }}"

- name: check if softnas cli login succeeded
  debug:
    msg: "softnas-cli login succeeded"
  when: softnas_init_volume_output_dict.success

- name: check if softnas cli login failed
  fail:
    msg: "{{softnas_init_volume_output_dict}}"
  failed_when: softnas_init_volume_output_dict.success == false

- name: Check volume create failed
  fail:
    msg: "{{softnas_init_volume_output_dict.result.msg}}"
  failed_when: softnas_init_volume_output_dict.result.success == false

- name: Check volume create succeeded
  debug:
    msg: "disk_name: {{ new_s3_disk_name }} vol_path: {{ softnas_init_volume_output_dict.result.records.vol_path }} bucket_name: {{ s3_disk_bucket_name }}"
  when: softnas_init_volume_output_dict.result.success