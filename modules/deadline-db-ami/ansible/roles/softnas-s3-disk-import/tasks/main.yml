---
- name: get bucket attributes
  set_fact:
    encrypt_s3_import: false
    encrypt_option: ""
    disk_device_import: "{{ existing_bucket.split('-')[4] }}"
    pool_name_import: "{{ existing_bucket.split('-')[2] }}"
    s3_disk_size_import: "{{ existing_bucket.split('-')[5][:-2] }}"
    s3_disk_size_units_import: "{{ existing_bucket.split('-')[5][-2:] | lower }}"
    encrypt_label: "{{ existing_bucket.split('-')[6] }}"
    import_pool: true
      
- name: check strings for attributes
  debug:
    msg: |
      existing_bucket: {{ existing_bucket }}
      encrypt_label: {{ encrypt_label }}
      s3_disk_size_import: {{ s3_disk_size_import }}
      s3_disk_size_units_import: {{ s3_disk_size_units_import }}
      pool_name_import: {{ pool_name_import }}


- name: check encryption password defined
  set_fact:
    s3_disk_password_defined: true
  when: s3_disk_password is defined

- name: check encryption label
  set_fact:
    encrypt_s3_import: true
  when: encrypt_label is match("encrypted")

- name: check if s3_disk_password is defined and encrypt label is "encrypted"
  set_fact:
    encrypt_option: "--encrypt {{ s3_disk_password }}"
  when: encrypt_s3_import and s3_disk_password_defined

- set_fact:
    import_s3_command: "/var/www/softnas/scripts/s3disk.sh --import --dname 's3-{{ disk_device_import }}' --bname {{ existing_bucket }} --bsize {{ s3_disk_size_import }}{{ s3_disk_size_units_import }} --region {{ bucket_location }} {{ encrypt_option }}"
    import_s3_pool: "zpool import -a -f -d /dev {{ zpool_import_flags }}"

- name: import s3 extender disk
  shell: |
    softnas-cmd login softnas {{ user_softnas_pw }}
    # set -x
    {{ import_s3_command }} >> /tmp/softnas_s3_disk_import_output
  register: shell_out_s3_import
  failed_when: shell_out_s3_import.rc != 1 and shell_out_s3_import.rc != 0
  no_log: true
  # a failed pool import isn't a good enough reason to stop the entire deployment.  this can likely be recovered manually.

- name: import s3 extender command
  shell: "cat /tmp/softnas_s3_disk_import_output"
  register: softnas_s3_disk_import_output

- name: import s3 extender command
  debug:
    msg: "{{ softnas_s3_disk_import_output.stdout }}"

- name: import all pools
  shell: |
    softnas-cmd login softnas {{ user_softnas_pw }}
    # set -x
    {{ import_s3_pool }} >> /tmp/softnas_s3_pool_import_output
  when: import_pool
  no_log: true
    
- name: import command
  shell: "cat /tmp/softnas_s3_pool_import_output"
  register: softnas_s3_pool_import_output
  when: import_pool

- name: import pool command
  debug:
    msg: "{{ softnas_s3_pool_import_output.stdout }}"
  when: import_pool