---
# tasks file for ansible/roles/softnas-s3-ebs-pool-create
- name: register device list for pool
  set_fact:
    device_list: []

- name: follow symlink for devices to mount points
  shell: |
    readlink -f {{ item.path }}
  register: device_links
  when: outer_item.item.pool_name == item.pool_name
  with_items:
    - "{{ mounts }}"

- name:
  debug:
    var: device_links

- name: register device list for pool
  set_fact:
    device_list: "{{ device_list + [ item.stdout ] }}"
  register: list_result
  when: outer_item.item.pool_name == item.item.pool_name
  with_items:
    - "{{ device_links.results }}"

- debug:
    var: list_result

- name: Concatenate the device names
  set_fact:
    devices_for_pool: "{{ device_list | join(':') }}"

- debug:
    var: devices_for_pool

- set_fact:
    pool_name: "{{ outer_item.item.pool_name }}"

- set_fact:
    volume_name: "{{ outer_item.item.volume_name }}"

- set_fact:
    raid_level: "{{ outer_item.item.raid_level }}"

- debug:
    msg: "create new pool"

- name: check pool_name is defined
  fail:
    msg: "Bailing out: creating a disk requires a 'pool_name'"
  when: pool_name is not defined

- name: check volume_name is defined
  fail:
    msg: "Bailing out: creating a disk requires a 'volume_name'"
  when: volume_name is not defined

- name: softnas login
  shell: |
    softnas-cmd login softnas {{ user_softnas_pw }}
  no_log: true

- name: create pool
  shell: |
    softnas-cmd login softnas {{ user_softnas_pw }}
    softnas-cmd createpool {{ devices_for_pool }} -n={{ pool_name }} -r={{ raid_level }} -f=on -t > /tmp/softnas_init_pool_output_dict.json
  no_log: true

- fetch:
    src: /tmp/softnas_init_pool_output_dict.json
    dest: /tmp/
    flat: true

- include_vars:
    file: /tmp/softnas_init_pool_output_dict.json
    name: softnas_init_pool_output_dict

- name: create pool all json output
  debug:
    var: softnas_init_pool_output_dict

- name: check if softnas cli login succeeded
  debug:
    msg: "softnas-cli login succeeded"
  when: softnas_init_pool_output_dict.success

- name: check if softnas cli login failed
  fail:
    msg: "{{softnas_init_pool_output_dict}}"
  failed_when: softnas_init_pool_output_dict.success == false

- name: Check if pool create failed
  fail:
    msg: |
      {{softnas_init_pool_output_dict.result.msg}}
  failed_when: softnas_init_pool_output_dict.result.success == false