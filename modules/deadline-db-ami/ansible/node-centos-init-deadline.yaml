- hosts: ansible_control
  remote_user: deployuser
  gather_facts: "{{ variable_gather_facts | default('false') }}"
  become: true
  
  vars:
    sync_downloads: false
    bucket: "{{ installers_bucket }}"

  tasks:
  - include_role:
      name: firehawkvfx.core.s3_bucket_shared
    tags:
    - sync_installers


### end steps to create new user

  - name: create Thinkbox dir
    file: 
      path: /opt/Thinkbox/
      state: directory
      mode: '0700'
      owner: deadlineuser
      group: syscontrol
    become: yes

  - name: create Thinkbox cert dir
    file: 
      path: /opt/Thinkbox/certs
      state: directory
      mode: '0700'
      owner: deadlineuser
      group: syscontrol
    become: yes

  - name: set deadline remote client certificate permissions locally
    file: 
      path: "{{ deadline_certificates_location }}/{{ deadline_proxy_certificate }}"
      mode: '0644'
      owner: deadlineuser
      group: syscontrol
    become: yes
    connection: local

  - name: Copy deadline remote client certificate
    copy: 
      src: "{{ deadline_certificates_location }}/{{ deadline_proxy_certificate }}"
      dest: "/opt/Thinkbox/certs/"
      mode: '0600'
      owner: deadlineuser
      group: syscontrol
    become: yes

  - name: Strange requirement here.  For some reason read permissions needed for everyone to be set above or the ansible copy doesn't work.  So we set it back to normal here.
    file: 
      path: "{{ deadline_certificates_location }}/{{ deadline_proxy_certificate }}"
      mode: '0640'
      owner: deadlineuser
      group: syscontrol
    become: yes
    connection: local

  - name: create download dir
    file: 
      path: "/home/deadlineuser/Downloads/{{ deadline_linux_basename }}"
      state: directory
      owner: deadlineuser
      group: syscontrol
    become: yes


  tasks:

  - name: s3-sync pull deadline installer
    import_role:
      name: firehawkvfx.core.s3_sync
    vars:
      mode: "pull"
      bucket: "{{ installers_bucket }}"
      basedir: "/home/deadlineuser/Downloads"
      filename: "{{ deadline_linux_filename }}"
      sync_user: "deadlineuser"


  - name: create deadline installer dir
    file: 
      path: "/home/deadlineuser/Downloads/{{ deadline_linux_basename }}"
      state: directory
      owner: deadlineuser
      group: syscontrol
    become: yes


  - name: Extract
    unarchive:
      src: "/home/deadlineuser/Downloads/{{ deadline_linux_filename }}"
      dest: "/home/deadlineuser/Downloads/{{ deadline_linux_basename }}"
      owner: deadlineuser
      mode: u+x
      remote_src: true
    become: yes

  - name: "Ansible find files in subdirectory downloads"
    find:
      paths: "/home/deadlineuser/Downloads/{{ deadline_linux_basename }}"
      patterns: "*DeadlineClient-{{ deadline_version }}-linux-x64-installer.run"
    register: files_matched
    become: true

  - debug:
      msg: "installer path: {{ files_matched.files[0].path }}"
  
  - name: set execute permissions on installer
    file:
      path: "{{ files_matched.files[0].path }}"
      mode: '0700'
      owner: deadlineuser
      group: syscontrol
    become: yes

  - name: deadline dependencies
    package:
      name: "{{ item }}"
      state: present
    with_items:
      - redhat-lsb
      - samba-client
      - samba-common
      - cifs-utils
      - nfs-utils
      - nload
      - tree
      - bzip2
      - nmap
      #- nfs-utils-lib
    vars:
      ansible_python_interpreter: "{{ package_python_interpreter }}"
# mounts are being tested in node-sentos-mounts.yaml now.

  - stat:
      path: /var/lib/Thinkbox/Deadline10/deadline.ini
    register: deadline_ini_file

  - name: get date
    shell: |
      date +"%Y%m%d_%H%M%S"
    register: current_date

  - set_fact:
      backup_dest: "/var/lib/Thinkbox/Deadline10/deadline.bak_{{ current_date.stdout }}"
    when: deadline_ini_file.stat.exists

  - debug:
      msg: "will backup file to {{ backup_dest }}"
    when: deadline_ini_file.stat.exists

  - name: move old config to backup.  this prevents old conf settings staying around.
    command: "mv /var/lib/Thinkbox/Deadline10/deadline.ini {{ backup_dest }}"
    when: deadline_ini_file.stat.exists

  - name: install deadline client
    shell: |
      cd /home/deadlineuser/Downloads/
      # set -x
      {{ files_matched.files[0].path }} --mode unattended --debuglevel 2 --prefix {{ deadline_prefix }} --connectiontype Remote --noguimode true --licensemode UsageBased --launcherdaemon true --slavestartup 1 --daemonuser {{ user_deadlineuser_name }} --enabletls true --tlsport 4433 --httpport 8080 --proxyrootdir {{ deadline_proxy_root_dir }} --proxycertificate {{ deadline_certificates_location }}/{{ deadline_proxy_certificate }} --proxycertificatepassword {{ deadline_proxy_certificate_password }}
    register: deadline_client_install_output_shell
    become: true
    
  - name: check deadline client install output
    debug:
      msg: "{{ deadline_client_install_output_shell.stdout }}"

  - name: check /var/lib/Thinkbox/Deadline10/deadline.ini
    command: cat /var/lib/Thinkbox/Deadline10/deadline.ini 
    register: deadline_config

  - debug: msg="{{ deadline_config.stdout }}"
  - debug: msg="{{ deadline_config.stderr }}"

