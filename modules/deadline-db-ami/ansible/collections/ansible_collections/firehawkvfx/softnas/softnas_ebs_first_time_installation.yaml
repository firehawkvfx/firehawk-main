- name: 'create a new ebs volume'
  debug:
    msg: "create a new ebs volume {{ item.item.int }} {{ item.item.path }}"

- name: show common_tags
  debug:
    var: common_tags

- name: add new key / value pairs to dict to combine dict.
  set_fact:
    common_tags: "{{ common_tags | combine({item.key: item.value}) }}"
  with_items:
  - { key: 'mount', value: '{{ item.item.path }}' }
  - { key: 'pool', value: '{{ item.item.pool_name }}' }

- name: show common_tags
  debug:
    var: common_tags

- name: common_tags iterate
  debug:
    var: "{{ item }}"
  with_dict: "{{ common_tags }}"

- name: create ebs volume
  ec2_vol:
    region: "{{ aws_region }}"
    instance: "{{ instance_id }}"
    name: "softnas_volume_{{ resourcetier }}_{{ item.item.int }}"
    volume_size: "{{ item.item.ebs_disk_size }}"
    volume_type: "{{ item.item.ebs_disk_type }}"
    device_name: "{{ item.item.path }}"
    delete_on_termination: false # destruciton of volumes is handled conditionally by the 'volatile' tag during terraform destroy or sleep.
  register: new_vol

- name: show new_vol
  debug:
    var: new_vol

- name: show new_vol id
  debug:
    var: new_vol.volume_id

- name: Add tags with a shell.  Ansible can't accept dict json var to define tags currently, so we loop over the dict to do this.
  shell: |
    aws ec2 create-tags --resources {{ new_vol.volume_id }} --tags Key={{ item.key }},Value={{ item.value }}
  connection: local
  with_dict: "{{ common_tags }}"