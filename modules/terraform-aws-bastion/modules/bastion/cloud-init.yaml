#cloud-config
# vim: syntax=yaml
# cloud-init-centos-7-ipv4-ena.yml
#
# This one is intended for new instances where:
# * the ENA adapter is in use, for example for the t3 and m5 instance types.
# * you want IPv4 networking only
#
# This has both ens3 and ens5 in it, although only one of these usually appears in practice,
# due to variability people have reported in starting up ena instances when the grub command
# line parameter "net.ifnames=0" is not present.
#
# Partially derived from:
# * pakdel's sketch of a network service remediation script in https://bugs.centos.org/view.php?id=13836
# * ldennison's comment in https://bugs.centos.org/view.php?id=14760 
# * hhsnow's comment in https://bugs.centos.org/view.php?id=14107
# * the cloud-init config in https://docs.aws.amazon.com/vpc/latest/userguide/vpc-migrate-ipv6.html#vpc-migrate-ipv6-instance-types
#
# Tested on CentOS Linux release 7.6.1810 (Core) and a t3.micro
# instance on 2019-05-19
#
# Author:
#    Richard Bullington-Mcguire <rbulling@obscure.org> / @obscurerichard 
#
# Copyright (C) 2019 by The Obscure Organization
# MIT licensed. See the LICENSE file for details.
network:
  version: 1
  config:
  - type: physical
    name: ens3
    subnets:
      - type: dhcp4
  - type: physical
    name: ens5
    subnets:
      - type: dhcp4
bootcmd:
  - |
    rm -f /etc/sysconfig/network-scripts/ifcfg-eth0
    for PATH_DHCLIENT_PID in /var/run/dhclient*; do
        export PATH_DHCLIENT_PID
        dhclient -r
        # Making sure it really truly stopped
        kill $(<PATH_DHCLIENT_PID) || true
        rm -f "$PATH_DHCLIENT_PID"
    done
    systemctl restart network

    echo $SHELL

    set -e

    # Send the log output from this script to user-data.log, syslog, and the console
    # From: https://alestic.com/2010/12/ec2-user-data-output/
    exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1

    # Log the given message. All logs are written to stderr with a timestamp.
    function log {
      local -r message="$1"
      local -r timestamp=$(date +"%Y-%m-%d %H:%M:%S")
      >&2 echo -e "$timestamp $message"
    }

    function has_yum {
      [[ -n "$(command -v yum)" ]]
    }

    if $(has_yum); then
      hostname=$(hostname -s) # in centos, failed dns lookup can cause commands to slowdown
      echo "127.0.0.1   $hostname.${aws_domain} $hostname" | tee -a /etc/hosts
    fi

    log "hostname: $(hostname)"
    log "hostname: $(hostname -f) $(hostname -s)"

    log "test sudo delay"
    log "no sudo"
    sudo echo "sudo"
    log "sudo"
    log "no sudo"
    sudo echo "sudo"
    log "sudo"
    log "no sudo"